let
  pynixifyOverlay =
    self: super: {
      python39 = super.python39.override { inherit packageOverrides; };
      python310 = super.python310.override { inherit packageOverrides; };
      python311 = super.python311.override { inherit packageOverrides; };
    };

  remove = e: builtins.filter (x: x != e);

  packageOverrides = self: super: with self; {
    inherit (super.stdenv) isDarwin isAarch64 isNixOS;
    isM1 = isDarwin && isAarch64;
    isOldMac = isDarwin && !isAarch64;
    # fixes for mac
    dnspython =
      if self.isDarwin then
        super.dnspython.overrideAttrs
          (_: {
            disabledTestPaths =
              [
                "tests/test_async.py"
                "tests/test_query.py"
                "tests/test_resolver.py"
                "tests/test_resolver_override.py"
              ];
          }) else super.dnspython;
    httplib2 =
      if self.isOldMac then
        super.httplib2.overrideAttrs
          (_: {
            disabledTests =
              [
                "test_connection_close"
                "test_timeout_subsequent"
                "test_client_cert_password_verified"
              ];
          }) else super.httplib2;
    passlib =
      if self.isDarwin then
        super.passlib.overrideAttrs
          (_: {
            doCheck = false;
          }) else super.passlib;

    # my packages
    archives = buildPythonPackage rec {
      pname = "archives";
      version = "0.12";

      src = fetchPypi {
        inherit pname version;
        sha256 = "10frsfmbd8cc8dv3dayfd68msk8ah0kvlr2yyx5y7l1vrmcsgxy8";
      };

      propagatedBuildInputs = [ click typed-ast radon ];

      meta = with lib; {
        description = "a new way to do python code documentation";
        homepage = "https://github.com/jpetrucciani/archives.git";
      };
    };

    # requirements for other packages
    radon = buildPythonPackage rec {
      pname = "radon";
      version = "5.1.0";

      src = fetchPypi {
        inherit pname version;
        sha256 = "1vmf56zsf3paa1jadjcjghiv2kxwiismyayq42ggnqpqwm98f7fb";
      };

      propagatedBuildInputs = [ mando colorama future ];

      doCheck = false;

      meta = with lib; {
        description = "Code Metrics in Python";
        homepage = "https://radon.readthedocs.org/";
      };
    };

    mando = buildPythonPackage rec {
      pname = "mando";
      version = "0.6.4";

      src = fetchPypi {
        inherit pname version;
        sha256 = "0q6rl085q1hw1wic52pqfndr0x3nirbxnhqj9akdm5zhq2fv3zkr";
      };

      propagatedBuildInputs = [ six ];

      doCheck = false;

      meta = with lib; {
        description = "Create Python CLI apps with little to no effort at all!";
        homepage = "https://mando.readthedocs.org/";
      };
    };

    # type annotations
    boto3-stubs = buildPythonPackage rec {
      pname = "boto3-stubs";
      version = "1.20.35";

      src = fetchPypi {
        inherit pname version;
        sha256 = "1nnd8jjakbcfjsfwn0w7i8mkqj7zji7x2vzmgklbrh3hw10ig95p";
      };

      propagatedBuildInputs = [ botocore-stubs ];
      checkInputs = [
        boto3
      ];
      pythonImportsCheck = [
        "boto3-stubs"
      ];

      meta = with lib; {
        description =
          "Type annotations for boto3 1.20.35, generated by mypy-boto3-builder 6.3.1";
        homepage = "https://github.com/vemel/mypy_boto3_builder";
      };
    };

    botocore-stubs = buildPythonPackage rec {
      pname = "botocore-stubs";
      version = "1.24.6";

      src = fetchPypi {
        inherit pname version;
        sha256 = "093zsj2wk7xw89yvs7w88z9w3811vkpgfv4q3wk9j6gd6n3hr1pw";
      };

      pythonImportsCheck = [
        "botocore-stubs"
      ];

      meta = with lib; {
        description =
          "Type annotations for botocore 1.24.6 generated with mypy-boto3-builder 7.1.2";
        homepage = "https://github.com/vemel/mypy_boto3_builder";
      };
    };


    # njsscan
    njsscan = buildPythonPackage rec {
      pname = "njsscan";
      version = "0.3.1";

      src = fetchPypi {
        inherit pname version;
        sha256 = "0slvk3h4flk3y95yh19p629xly37yqh42rfw1vqv598srj6x7j93";
      };

      propagatedBuildInputs = [
        colorama
        libsast
        sarif-om
        jschema-to-python
        tabulate
      ];

      pythonImportsCheck = [
        "njsscan"
      ];

      meta = with lib; {
        description =
          "njsscan is a SAST tool that can find insecure code patterns in your Node.js applications.";
        homepage = "https://github.com/ajinabraham/njsscan";
      };
    };

    libsast = buildPythonPackage rec {
      pname = "libsast";
      version = "1.5.0";

      src = fetchPypi {
        inherit pname version;
        sha256 = "0nwms1jjb22w3f6rsyh9w4mpr54kab7a10hr02c0wlw7n1ai5k9d";
      };

      propagatedBuildInputs = [
        requests
        pyyaml
        semgrep
      ];

      pythonImportsCheck = [
        "libsast"
      ];

      meta = with lib; {
        description = "A generic SAST core built on top of semgrep and regex";
        homepage = "https://github.com/ajinabraham/libsast";
      };
    };

    sarif-om = buildPythonPackage rec {
      pname = "sarif-om";
      version = "1.0.4";

      src = fetchPypi {
        inherit version;
        pname = "sarif_om";
        sha256 = "167gb8xjm0310km3w1s12bqldbv7zyklkr4j5900vq4361ml2pyd";
      };

      buildInputs = [ pbr ];
      propagatedBuildInputs = [
        attrs
        pbr
      ];

      # doCheck = false;
      pythonImportsCheck = [
        "sarif_om"
      ];

      meta = with lib; { };
    };

    jschema-to-python = buildPythonPackage rec {
      pname = "jschema-to-python";
      version = "1.2.3";

      src = fetchPypi {
        inherit version;
        pname = "jschema_to_python";
        sha256 = "14cvaiwm56g0v6p7zviikaa5i9ln3yqy910jmp60hirhbpz19zvn";
      };

      checkInputs = [
        pytestCheckHook
      ];

      buildInputs = [ pbr ];
      propagatedBuildInputs = [
        attrs
        jsonpickle
        pbr
      ];

      pythonImportsCheck = [
        "jschema_to_python"
      ];

      meta = with lib; { };
    };

    semgrep = buildPythonPackage rec {
      pname = "semgrep";
      version = "0.80.0";

      SEMGREP_CORE_BIN = "${pkgs.semgrep-core}/bin/semgrep-core";

      src = fetchPypi {
        inherit pname version;
        sha256 = "0k27wmqw3b4xar9svc31hg2dxdxck6rgrki9r0vi4nw4mjb6q5mm";
      };

      propagatedBuildInputs = [
        attrs
        colorama
        click-option-group
        jsonschema
        packaging
        peewee
        requests
        ruamel-yaml
        tqdm
        wcmatch
      ];

      doCheck = false;
      pythonImportsCheck = [
        "semgrep"
      ];

      meta = with lib; { };
    };

    notion-client = buildPythonPackage rec {
      pname = "notion-client";
      version = "0.9.0";

      src = fetchPypi {
        inherit pname version;
        sha256 = "004vx0fv7v12r18m1np1hjx9qnxgdk6aajsjhchvz0fyl2588f3l";
      };

      propagatedBuildInputs = [ httpx ];

      doCheck = false;

      pythonImportsCheck = [
        "notion_client"
      ];

      meta = with lib; {
        description = "Python client for the official Notion API";
        homepage = "https://github.com/ramnes/notion-sdk-py";
      };
    };


    # bypython off of master
    bpython = (super.bpython.overrideAttrs
      (old: {
        version = "master-2022-05-01";
        src = builtins.fetchTarball {
          url = "https://github.com/bpython/bpython/archive/af5e90ab270956d45b9c9399fc2929ab996d22b6.tar.gz";
          sha256 = "0gwv8rg0pg5j46jjk8d193s1c8a9gcm04m6minhwrnq04wrikbnp";
        };
        propagatedBuildInputs = [
          curtsies
          cwcwidth
          greenlet
          jedi
          pygments
          pyperclip
          pyxdg
          requests
          typing-extensions
          urwid
        ];
      })).override {
      curtsies = curtsies.overridePythonAttrs (_: { doCheck = false; });
    };
  };
in
pynixifyOverlay
