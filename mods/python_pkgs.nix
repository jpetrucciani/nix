let
  pynixifyOverlay =
    final: prev: {
      python39 = prev.python39.override { inherit packageOverrides; };
      python310 = prev.python310.override { inherit packageOverrides; };
      python311 = prev.python311.override { inherit packageOverrides; };
    };

  remove = e: builtins.filter (x: x != e);

  packageOverrides = final: prev: with final; {
    inherit (prev.stdenv) isDarwin isAarch64 isNixOS;
    isM1 = isDarwin && isAarch64;
    isOldMac = isDarwin && !isAarch64;

    twisted = if isM1 then prev.twisted.overrideAttrs (_: { doInstallCheck = false; }) else prev.twisted;
    pyopenssl = if isM1 then prev.pyopenssl.overrideAttrs (_: { meta.broken = false; }) else prev.pyopenssl;

    # my packages
    archives = buildPythonPackage rec {
      pname = "archives";
      version = "0.12";

      src = fetchPypi {
        inherit pname version;
        sha256 = "10frsfmbd8cc8dv3dayfd68msk8ah0kvlr2yyx5y7l1vrmcsgxy8";
      };

      propagatedBuildInputs = [ click typed-ast radon ];

      meta = with lib; {
        description = "a new way to do python code documentation";
        homepage = "https://github.com/jpetrucciani/archives.git";
      };
    };

    # requirements for other packages
    radon = buildPythonPackage rec {
      pname = "radon";
      version = "5.1.0";

      src = fetchPypi {
        inherit pname version;
        sha256 = "1vmf56zsf3paa1jadjcjghiv2kxwiismyayq42ggnqpqwm98f7fb";
      };

      propagatedBuildInputs = [ mando colorama future ];

      doCheck = false;

      meta = with lib; {
        description = "Code Metrics in Python";
        homepage = "https://radon.readthedocs.org/";
      };
    };

    mando = buildPythonPackage rec {
      pname = "mando";
      version = "0.6.4";

      src = fetchPypi {
        inherit pname version;
        sha256 = "0q6rl085q1hw1wic52pqfndr0x3nirbxnhqj9akdm5zhq2fv3zkr";
      };

      propagatedBuildInputs = [ six ];

      doCheck = false;

      meta = with lib; {
        description = "Create Python CLI apps with little to no effort at all!";
        homepage = "https://mando.readthedocs.org/";
      };
    };

    # type annotations
    boto3-stubs = buildPythonPackage rec {
      pname = "boto3-stubs";
      version = "1.20.35";

      src = fetchPypi {
        inherit pname version;
        sha256 = "1nnd8jjakbcfjsfwn0w7i8mkqj7zji7x2vzmgklbrh3hw10ig95p";
      };

      propagatedBuildInputs = [ botocore-stubs ];
      checkInputs = [
        boto3
      ];
      pythonImportsCheck = [
        "boto3-stubs"
      ];

      meta = with lib; {
        description =
          "Type annotations for boto3 1.20.35, generated by mypy-boto3-builder 6.3.1";
        homepage = "https://github.com/vemel/mypy_boto3_builder";
      };
    };

    botocore-stubs = buildPythonPackage rec {
      pname = "botocore-stubs";
      version = "1.24.6";

      src = fetchPypi {
        inherit pname version;
        sha256 = "093zsj2wk7xw89yvs7w88z9w3811vkpgfv4q3wk9j6gd6n3hr1pw";
      };

      pythonImportsCheck = [
        "botocore-stubs"
      ];

      meta = with lib; {
        description =
          "Type annotations for botocore 1.24.6 generated with mypy-boto3-builder 7.1.2";
        homepage = "https://github.com/vemel/mypy_boto3_builder";
      };
    };

    passlib =
      if isDarwin then
        prev.passlib.overrideAttrs
          (_: {
            disabledTestPaths =
              [
                "passlib/tests/test_context.py"
              ];
          }) else prev.passlib;
    curio =
      if isDarwin then
        prev.curio.overrideAttrs
          (_: {
            doCheck = false;
            doInstallCheck = false;
          }) else prev.curio;


    notion-client = buildPythonPackage rec {
      pname = "notion-client";
      version = "0.9.0";

      src = fetchPypi {
        inherit pname version;
        sha256 = "004vx0fv7v12r18m1np1hjx9qnxgdk6aajsjhchvz0fyl2588f3l";
      };

      propagatedBuildInputs = [ httpx ];

      doCheck = false;

      pythonImportsCheck = [
        "notion_client"
      ];

      meta = with lib; {
        description = "Python client for the official Notion API";
        homepage = "https://github.com/ramnes/notion-sdk-py";
      };
    };


    # bypython off of master
    bpython = (prev.bpython.overrideAttrs
      (old: {
        version = "master-2022-05-01";
        src = builtins.fetchTarball {
          url = "https://github.com/bpython/bpython/archive/af5e90ab270956d45b9c9399fc2929ab996d22b6.tar.gz";
          sha256 = "0gwv8rg0pg5j46jjk8d193s1c8a9gcm04m6minhwrnq04wrikbnp";
        };
        propagatedBuildInputs = [
          (curtsies.overridePythonAttrs (_: { doCheck = false; }))
          cwcwidth
          greenlet
          jedi
          pygments
          pyperclip
          pyxdg
          requests
          typing-extensions
          urwid
        ];
      })).override {
      curtsies = curtsies.overridePythonAttrs (_: { doCheck = false; });
    };

    mitmproxy2swagger = buildPythonPackage rec {
      pname = "mitmproxy2swagger";
      version = "0.4.2";

      src = fetchPypi {
        inherit version;
        pname = "mitmproxy2swagger";
        sha256 = "sha256-VTbHa+Dv0DD6t/xjYXGFnc4lA78XCUdYpVRIhWETqe4=";
      };

      propagatedBuildInputs = [
        setuptools
        asgiref
        blinker
        brotli
        certifi
        click
        cryptography
        flask
        h11
        h2
        hyperframe
        kaitaistruct
        ldap3
        msgpack
        passlib
        protobuf
        publicsuffix2
        pyopenssl
        pyparsing
        pyperclip
        ruamel-yaml
        sortedcontainers
        tornado
        urwid
        wsproto
        zstandard
        colorama
        flask
        mitmproxy
        markupsafe
      ];

      doCheck = false;
    };
  };
in
pynixifyOverlay
